name: CI CD

on:
  push:
    branches:
      - new-branch

env:
  EC2_USERNAME: ubuntu
  AWS_REGION: ap-northeast-2

jobs:
  ci-cd:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Check SonarCloud Quality Gate
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          sleep 20
          RESULT=$(curl -u "${SONAR_TOKEN}:" \
            "https://sonarcloud.io/api/qualitygates/project_status?projectKey=mju-ai-pro_ai-pro-ai")
          STATUS=$(echo $RESULT | jq -r '.projectStatus.status')
          echo "Quality Gate Status: $STATUS"
          
          if [ "$STATUS" = "OK" ]; then
            echo "Quality Gate 통과"
          else
            echo "Quality Gate 통과 실패"
            MESSAGE="❗ 배포 중 품질 게이트를 통과하지 못했습니다.: ${{ github.repository }} (${{ github.ref }})"
            DETAILS="자세한 내용: https://sonarcloud.io/dashboard?id=mju-ai-pro_ai-pro-ai"
            
            DATA='{
              "embeds": [
                {
                  "title": "품질 게이트 통과 실패",
                  "description": "'"${MESSAGE}"'\n\n'"${DETAILS}"'",
                  "color": 16711680,
                  "footer": {
                    "text": "알림"
                  }
                }
              ]
            }'

            curl -X POST -H 'Content-type:application/json' -d "$DATA" ${{ secrets.DISCORD_WEBHOOK_URL }}
            
            exit 1
          fi
          
      - name: AWS Authentication
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}

      - name: Deploy Python file to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_PUBLIC_IP }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "$EC2_SSH_KEY" > private_key && chmod 600 private_key
          scp -o StrictHostKeyChecking=no -i private_key main.py ${EC2_USERNAME}@${EC2_HOST}:/home/AiPro-Python/main.py
          rm -f private_key

      - name: Setup Environment and Run Application
        id: deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ env.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/AiPro-Python
            nohup uvicorn main:app --host 0.0.0.0 --port 5000 --reload > app.log 2>&1 &

      - name: Send Deployment Success Notification
        if: steps.deploy.outcome == 'success'
        run: |
          MESSAGE="✅ 애플리케이션이 성공적으로 배포되었습니다! : ${GITHUB_REPOSITORY} (${GITHUB_REF})"
          DETAILS="해당 서버에서 실행 중입니다: https://hongkikii.site:444"
          
          DATA='{
            "embeds": [
              {
                "title": "배포 성공",
                "description": "'"${MESSAGE}"'\n\n'"${DETAILS}"'",
                "color": 65280,
                "footer": {
                  "text": "알림"
                }
              }
            ]
          }'
      
          curl -X POST -H 'Content-type:application/json' -d "$DATA" ${{ secrets.DISCORD_WEBHOOK_URL }}
